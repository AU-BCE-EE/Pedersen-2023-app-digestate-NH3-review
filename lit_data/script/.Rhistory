no16 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no16clean.txt',
col.names = header)
no17 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no17clean.txt',
col.names = header)
no1$exp <- 'no1'; no2$exp <- 'no2'; no3$exp <- 'no3';
no4$exp <- 'no4'; no5$exp <- 'no5'; no6$exp <- 'no6';
no7$exp <- 'no7'; no8$exp <- 'no8'; no9$exp <- 'no9';
no10$exp <- 'no10'; no11$exp <- 'no11'; no12$exp <- 'no12';
no13$exp <- 'no13'; no14$exp <- 'no14'; no15$exp <- 'no15';
no16$exp <- 'no16'; no17$exp <- 'no17';
no1 <- no1[! no1$mm > 120, ]; no4 <- no4[! no4$mm > 120, ]; no7 <- no7[! no7$mm > 120, ];
no2 <- no2[! no2$mm > 120, ]; no5 <- no5[! no5$mm > 120, ]; no8 <- no8[! no8$mm > 120, ];
no3 <- no3[! no3$mm > 120, ]; no6 <- no6[! no6$mm > 120, ]; no9 <- no9[! no9$mm > 120, ];
no10 <- no10[! no10$mm > 120, ]; no11 <- no11[! no11$mm > 120, ]; no12 <- no12[! no12$mm > 120, ];
no13 <- no13[! no13$mm > 120, ]; no14 <- no14[! no14$mm > 120, ]; no15 <- no15[! no15$mm > 120, ];
no16 <- no16[! no16$mm > 120, ]; no17 <- no17[! no17$mm > 120, ];
no1$treat <- 'water'; no2$treat <- 'water'; no3$treat <- 'water';no4$treat <- 'water'; no5$treat <- 'water'; no6$treat <- 'water';
no7$treat <- 'separated'; no8$treat <- 'separated'; no9$treat <- 'separated'; no10$treat <- 'separated'; no11$treat <- 'separated'; no12$treat <- 'separated'
no13$treat <- 'untreated'; no14$treat <- 'untreated'; no15$treat <- 'untreated'; no16$treat <- 'untreated'; no17$treat <- 'untreated';
no1$elapsed.csek <- c(1:nrow(no1)); no4$elapsed.csek <- c(1:nrow(no4)); no7$elapsed.csek <- c(1:nrow(no7))
no2$elapsed.csek <- c(1:nrow(no2)); no5$elapsed.csek <- c(1:nrow(no5)); no6$elapsed.csek <- c(1:nrow(no6))
no3$elapsed.csek <- c(1:nrow(no3)); no8$elapsed.csek <- c(1:nrow(no8)); no9$elapsed.csek <- c(1:nrow(no9))
no10$elapsed.csek <- c(1:nrow(no10)); no11$elapsed.csek <- c(1:nrow(no11)); no12$elapsed.csek <- c(1:nrow(no12))
no13$elapsed.csek <- c(1:nrow(no13)); no14$elapsed.csek <- c(1:nrow(no14)); no15$elapsed.csek <- c(1:nrow(no15))
no16$elapsed.csek <- c(1:nrow(no16)); no17$elapsed.csek <- c(1:nrow(no17));
dat <- rbind(no1, no2, no3, no4, no5, no6, no7, no8, no9, no10, no11, no12, no13, no14, no15, no16, no17)
# plots of raw data:
ggplot(dat, aes(elapsed.csek, mm , color = treat)) + geom_point()
ggplot(dat, aes(elapsed.csek, mm , color = treat)) + geom_point() + xlim(0, 500)
dat$mm <- 100 - dat$mm
dat <- mutate(group_by(dat, exp), mm.new = 100 - mm[1] + mm)
ggplot(dat, aes(elapsed.csek, mm.new , color = treat)) + geom_point() + xlim(0, 300) + ylim(90, 100)
ggplot(dat, aes(elapsed.csek, mm.new , color = treat)) + geom_point() + xlim(0, 2000)
ggplot(dat, aes(elapsed.csek, mm.new , color = exp)) + geom_point() + xlim(0, 2000)
# exp7 there is clearly something wrong, the sensor must have been moved. it is removed.
dat <- dat[! dat$exp == 'no7', ]
ggplot(dat, aes(elapsed.csek, mm.new , color = trest)) + geom_point() + xlim(0, 2000)
ggplot(dat, aes(elapsed.csek, mm.new , color = treat)) + geom_point() + xlim(0, 2000)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 0.5) + ylim(90, 100)
dat$min <- dat$elapsed.csek / 600
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 0.5) + ylim(90, 100)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 3.4)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point()
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 0.5) + ylim(90, 100)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 3.4)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 3.4)
ggplot(dat, aes(min, mm.new , color = exp)) + geom_point() + xlim(0, 0.5) + ylim(90, 100)
ggplot(dat, aes(min, mm.new , color = exp)) + geom_point() + xlim(0, 0.5) + ylim(90, 120)
ggplot(dat, aes(min, mm.new , color = exp)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
ggplot(dat[dat$treat == 'water', ], aes(min, mm.new , color = exp)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
ggplot(dat[dat$treat == 'separated', ], aes(min, mm.new , color = exp)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
ggplot(dat[dat$treat == 'untreated', ], aes(min, mm.new , color = exp)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
# sensor test
# packages:
library(ggplot2)
library(dplyr)
# no8 is no good, it is jumping a lot. Accidently moved the black cloth covering the sensor which is probably why.
# reading in data
header <- c('date', 'time', 'mm')
no1 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no1clean.txt',
col.names = header)
no2 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no2clean.txt',
col.names = header)
no3 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no3clean.txt',
col.names = header)
no4 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no4clean.txt',
col.names = header)
no5 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no5clean.txt',
col.names = header)
no6 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no6clean.txt',
col.names = header)
no7 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no7clean.txt',
col.names = header)
no8 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no8clean.txt',
col.names = header)
no9 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no9clean.txt',
col.names = header)
no10 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no10clean.txt',
col.names = header)
no11 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no11clean.txt',
col.names = header)
no12 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no12clean.txt',
col.names = header)
no13 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no13clean.txt',
col.names = header)
no14 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no14clean.txt',
col.names = header)
no15 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no15clean.txt',
col.names = header)
no16 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no16clean.txt',
col.names = header)
no17 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no17clean.txt',
col.names = header)
no1$exp <- 'no1'; no2$exp <- 'no2'; no3$exp <- 'no3';
no4$exp <- 'no4'; no5$exp <- 'no5'; no6$exp <- 'no6';
no7$exp <- 'no7'; no8$exp <- 'no8'; no9$exp <- 'no9';
no10$exp <- 'no10'; no11$exp <- 'no11'; no12$exp <- 'no12';
no13$exp <- 'no13'; no14$exp <- 'no14'; no15$exp <- 'no15';
no16$exp <- 'no16'; no17$exp <- 'no17';
no1 <- no1[! no1$mm > 120, ]; no4 <- no4[! no4$mm > 120, ]; no7 <- no7[! no7$mm > 120, ];
no2 <- no2[! no2$mm > 120, ]; no5 <- no5[! no5$mm > 120, ]; no8 <- no8[! no8$mm > 120, ];
no3 <- no3[! no3$mm > 120, ]; no6 <- no6[! no6$mm > 120, ]; no9 <- no9[! no9$mm > 120, ];
no10 <- no10[! no10$mm > 120, ]; no11 <- no11[! no11$mm > 120, ]; no12 <- no12[! no12$mm > 120, ];
no13 <- no13[! no13$mm > 120, ]; no14 <- no14[! no14$mm > 120, ]; no15 <- no15[! no15$mm > 120, ];
no16 <- no16[! no16$mm > 120, ]; no17 <- no17[! no17$mm > 120, ];
no1$treat <- 'water'; no2$treat <- 'water'; no3$treat <- 'water';no4$treat <- 'water'; no5$treat <- 'water'; no6$treat <- 'water';
no7$treat <- 'separated'; no8$treat <- 'separated'; no9$treat <- 'separated'; no10$treat <- 'separated'; no11$treat <- 'separated'; no12$treat <- 'separated'
no13$treat <- 'untreated'; no14$treat <- 'untreated'; no15$treat <- 'untreated'; no16$treat <- 'untreated'; no17$treat <- 'untreated';
no1$elapsed.csek <- c(1:nrow(no1)); no4$elapsed.csek <- c(1:nrow(no4)); no7$elapsed.csek <- c(1:nrow(no7))
no2$elapsed.csek <- c(1:nrow(no2)); no5$elapsed.csek <- c(1:nrow(no5)); no6$elapsed.csek <- c(1:nrow(no6))
no3$elapsed.csek <- c(1:nrow(no3)); no8$elapsed.csek <- c(1:nrow(no8)); no9$elapsed.csek <- c(1:nrow(no9))
no10$elapsed.csek <- c(1:nrow(no10)); no11$elapsed.csek <- c(1:nrow(no11)); no12$elapsed.csek <- c(1:nrow(no12))
no13$elapsed.csek <- c(1:nrow(no13)); no14$elapsed.csek <- c(1:nrow(no14)); no15$elapsed.csek <- c(1:nrow(no15))
no16$elapsed.csek <- c(1:nrow(no16)); no17$elapsed.csek <- c(1:nrow(no17));
dat <- rbind(no1, no2, no3, no4, no5, no6, no7, no8, no9, no10, no11, no12, no13, no14, no15, no16, no17)
# plots of raw data:
ggplot(dat, aes(elapsed.csek, mm , color = treat)) + geom_point()
ggplot(dat, aes(elapsed.csek, mm , color = treat)) + geom_point() + xlim(0, 500)
# exp7 there is clearly something wrong, the sensor must have been moved. it is removed.
dat <- dat[! dat$exp == 'no7', ]
dat$mm <- 100 - dat$mm
dat <- mutate(group_by(dat, exp), mm.new = 100 - mm[1] + mm)
ggplot(dat, aes(elapsed.csek, mm.new , color = treat)) + geom_point() + xlim(0, 300) + ylim(90, 100)
ggplot(dat, aes(elapsed.csek, mm.new , color = treat)) + geom_point() + xlim(0, 2000)
dat$min <- dat$elapsed.csek / 600
ggplot(dat[dat$treat == 'untreated', ], aes(min, mm.new , color = exp)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
ggplot(dat[dat$treat == 'separated', ], aes(min, mm.new , color = exp)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
ggplot(dat[dat$treat == 'water', ], aes(min, mm.new , color = exp)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
ggplot(dat, aes(min, mm.new , color = exp)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
ggplot(dat[dat$treat == 'untreated', ], aes(min, mm.new , color = exp)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
# sensor test
# packages:
library(ggplot2)
library(dplyr)
# no8 is no good, it is jumping a lot. Accidently moved the black cloth covering the sensor which is probably why.
# reading in data
header <- c('date', 'time', 'mm')
no1 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no1clean.txt',
col.names = header)
no2 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no2clean.txt',
col.names = header)
no3 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no3clean.txt',
col.names = header)
no4 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no4clean.txt',
col.names = header)
no5 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no5clean.txt',
col.names = header)
no6 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no6clean.txt',
col.names = header)
no7 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no7clean.txt',
col.names = header)
no8 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no8clean.txt',
col.names = header)
no9 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no9clean.txt',
col.names = header)
no10 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no10clean.txt',
col.names = header)
no11 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no11clean.txt',
col.names = header)
no12 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no12clean.txt',
col.names = header)
no13 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no13clean.txt',
col.names = header)
no14 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no14clean.txt',
col.names = header)
no15 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no15clean.txt',
col.names = header)
no16 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no16clean.txt',
col.names = header)
no17 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no17clean.txt',
col.names = header)
no1$exp <- 'no1'; no2$exp <- 'no2'; no3$exp <- 'no3';
no4$exp <- 'no4'; no5$exp <- 'no5'; no6$exp <- 'no6';
no7$exp <- 'no7'; no8$exp <- 'no8'; no9$exp <- 'no9';
no10$exp <- 'no10'; no11$exp <- 'no11'; no12$exp <- 'no12';
no13$exp <- 'no13'; no14$exp <- 'no14'; no15$exp <- 'no15';
no16$exp <- 'no16'; no17$exp <- 'no17';
no1 <- no1[! no1$mm > 120, ]; no4 <- no4[! no4$mm > 120, ]; no7 <- no7[! no7$mm > 120, ];
no2 <- no2[! no2$mm > 120, ]; no5 <- no5[! no5$mm > 120, ]; no8 <- no8[! no8$mm > 120, ];
no3 <- no3[! no3$mm > 120, ]; no6 <- no6[! no6$mm > 120, ]; no9 <- no9[! no9$mm > 120, ];
no10 <- no10[! no10$mm > 120, ]; no11 <- no11[! no11$mm > 120, ]; no12 <- no12[! no12$mm > 120, ];
no13 <- no13[! no13$mm > 120, ]; no14 <- no14[! no14$mm > 120, ]; no15 <- no15[! no15$mm > 120, ];
no16 <- no16[! no16$mm > 120, ]; no17 <- no17[! no17$mm > 120, ];
no1$treat <- 'water'; no2$treat <- 'water'; no3$treat <- 'water';no4$treat <- 'water'; no5$treat <- 'water'; no6$treat <- 'water';
no7$treat <- 'separated'; no8$treat <- 'separated'; no9$treat <- 'separated'; no10$treat <- 'separated'; no11$treat <- 'separated'; no12$treat <- 'separated'
no13$treat <- 'untreated'; no14$treat <- 'untreated'; no15$treat <- 'untreated'; no16$treat <- 'untreated'; no17$treat <- 'untreated';
no1$elapsed.csek <- c(1:nrow(no1)); no4$elapsed.csek <- c(1:nrow(no4)); no7$elapsed.csek <- c(1:nrow(no7))
no2$elapsed.csek <- c(1:nrow(no2)); no5$elapsed.csek <- c(1:nrow(no5)); no6$elapsed.csek <- c(1:nrow(no6))
no3$elapsed.csek <- c(1:nrow(no3)); no8$elapsed.csek <- c(1:nrow(no8)); no9$elapsed.csek <- c(1:nrow(no9))
no10$elapsed.csek <- c(1:nrow(no10)); no11$elapsed.csek <- c(1:nrow(no11)); no12$elapsed.csek <- c(1:nrow(no12))
no13$elapsed.csek <- c(1:nrow(no13)); no14$elapsed.csek <- c(1:nrow(no14)); no15$elapsed.csek <- c(1:nrow(no15))
no16$elapsed.csek <- c(1:nrow(no16)); no17$elapsed.csek <- c(1:nrow(no17));
dat <- rbind(no1, no2, no3, no4, no5, no6, no7, no8, no9, no10, no11, no12, no13, no14, no15, no16, no17)
# plots of raw data:
ggplot(dat, aes(elapsed.csek, mm , color = treat)) + geom_point()
ggplot(dat, aes(elapsed.csek, mm , color = treat)) + geom_point() + xlim(0, 500)
# exp7 there is clearly something wrong, the sensor must have been moved. it is removed.
dat <- dat[! dat$exp == 'no7', ]
dat$mm <- 100 - dat$mm
dat <- mutate(group_by(dat, exp), mm.new = 100 - mm[1] + mm)
ggplot(dat, aes(elapsed.csek, mm.new , color = treat)) + geom_point() + xlim(0, 300) + ylim(90, 100)
ggplot(dat, aes(elapsed.csek, mm.new , color = treat)) + geom_point() + xlim(0, 2000)
dat$min <- dat$elapsed.csek / 600
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 0.5) + ylim(90, 105)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 0.5) + ylim(NA, 102)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 0.5) + ylim(80, 102)
# sensor test
# packages:
library(ggplot2)
library(dplyr)
# no8 is no good, it is jumping a lot. Accidently moved the black cloth covering the sensor which is probably why.
# reading in data
header <- c('date', 'time', 'mm')
no1 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no1clean.txt',
col.names = header)
no2 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no2clean.txt',
col.names = header)
no3 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no3clean.txt',
col.names = header)
no4 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no4clean.txt',
col.names = header)
no5 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no5clean.txt',
col.names = header)
no6 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no6clean.txt',
col.names = header)
no7 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no7clean.txt',
col.names = header)
no8 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no8clean.txt',
col.names = header)
no9 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no9clean.txt',
col.names = header)
no10 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no10clean.txt',
col.names = header)
no11 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no11clean.txt',
col.names = header)
no12 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no12clean.txt',
col.names = header)
no13 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no13clean.txt',
col.names = header)
no14 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no14clean.txt',
col.names = header)
no15 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no15clean.txt',
col.names = header)
no16 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no16clean.txt',
col.names = header)
no17 <- read.table('C:/Users/au583430/OneDrive - Aarhus Universitet/Dokumenter/MAG/infiltrations sensor/220615 test 5/data/no17clean.txt',
col.names = header)
no1$exp <- 'no1'; no2$exp <- 'no2'; no3$exp <- 'no3';
no4$exp <- 'no4'; no5$exp <- 'no5'; no6$exp <- 'no6';
no7$exp <- 'no7'; no8$exp <- 'no8'; no9$exp <- 'no9';
no10$exp <- 'no10'; no11$exp <- 'no11'; no12$exp <- 'no12';
no13$exp <- 'no13'; no14$exp <- 'no14'; no15$exp <- 'no15';
no16$exp <- 'no16'; no17$exp <- 'no17';
no1 <- no1[! no1$mm > 120, ]; no4 <- no4[! no4$mm > 120, ]; no7 <- no7[! no7$mm > 120, ];
no2 <- no2[! no2$mm > 120, ]; no5 <- no5[! no5$mm > 120, ]; no8 <- no8[! no8$mm > 120, ];
no3 <- no3[! no3$mm > 120, ]; no6 <- no6[! no6$mm > 120, ]; no9 <- no9[! no9$mm > 120, ];
no10 <- no10[! no10$mm > 120, ]; no11 <- no11[! no11$mm > 120, ]; no12 <- no12[! no12$mm > 120, ];
no13 <- no13[! no13$mm > 120, ]; no14 <- no14[! no14$mm > 120, ]; no15 <- no15[! no15$mm > 120, ];
no16 <- no16[! no16$mm > 120, ]; no17 <- no17[! no17$mm > 120, ];
no1$treat <- 'water'; no2$treat <- 'water'; no3$treat <- 'water';no4$treat <- 'water'; no5$treat <- 'water'; no6$treat <- 'water';
no7$treat <- 'separated'; no8$treat <- 'separated'; no9$treat <- 'separated'; no10$treat <- 'separated'; no11$treat <- 'separated'; no12$treat <- 'separated'
no13$treat <- 'untreated'; no14$treat <- 'untreated'; no15$treat <- 'untreated'; no16$treat <- 'untreated'; no17$treat <- 'untreated';
no1$elapsed.csek <- c(1:nrow(no1)); no4$elapsed.csek <- c(1:nrow(no4)); no7$elapsed.csek <- c(1:nrow(no7))
no2$elapsed.csek <- c(1:nrow(no2)); no5$elapsed.csek <- c(1:nrow(no5)); no6$elapsed.csek <- c(1:nrow(no6))
no3$elapsed.csek <- c(1:nrow(no3)); no8$elapsed.csek <- c(1:nrow(no8)); no9$elapsed.csek <- c(1:nrow(no9))
no10$elapsed.csek <- c(1:nrow(no10)); no11$elapsed.csek <- c(1:nrow(no11)); no12$elapsed.csek <- c(1:nrow(no12))
no13$elapsed.csek <- c(1:nrow(no13)); no14$elapsed.csek <- c(1:nrow(no14)); no15$elapsed.csek <- c(1:nrow(no15))
no16$elapsed.csek <- c(1:nrow(no16)); no17$elapsed.csek <- c(1:nrow(no17));
dat <- rbind(no1, no2, no3, no4, no5, no6, no7, no8, no9, no10, no11, no12, no13, no14, no15, no16, no17)
# plots of raw data:
ggplot(dat, aes(elapsed.csek, mm , color = treat)) + geom_point()
ggplot(dat, aes(elapsed.csek, mm , color = treat)) + geom_point() + xlim(0, 500)
# exp7 there is clearly something wrong, the sensor must have been moved. it is removed.
dat <- dat[! dat$exp == 'no7', ]
dat$mm <- 100 - dat$mm
dat <- mutate(group_by(dat, exp), mm.new = 100 - mm[1] + mm)
ggplot(dat, aes(elapsed.csek, mm.new , color = treat)) + geom_point() + xlim(0, 300) + ylim(90, 100)
ggplot(dat, aes(elapsed.csek, mm.new , color = treat)) + geom_point() + xlim(0, 2000)
dat$min <- dat$elapsed.csek / 600
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 0.5) + ylim(80, 102)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point() + xlim(0, 3.4)
ggplot(dat, aes(min, mm.new , color = treat)) + geom_point()
install.packages("NADA")
library(NADA)
data(asExample)
data(AsExample)
data(ShePyrene)
attach(ShePyrene)
names(ShePyrene)
View(ShePyrene)
mean(ShePyrene$Pyrene)
sd(ShePyrene$Pyre)
sd(ShePyrene$Pyrene)
summary(Pyrene)
mean(Pyrene)
sd(Pyrene)
summary(Pyrene)
censummary(Pyrene, PyreneCen)
pkym = cenfit(Pyrne, PyreneCen)
pkym = cenfit(Pyrene, PyreneCen)
pykm
pykm = cenfit(Pyrene, PyreneCen)
pykm
mean(Pyrene)
sd(Pyrene)
plot(pykm)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('functions.R')
source('packages.R')
source('load.R')
dd <- dat[dat$relTreat == 'yes', ]
dd$emis.perc <- as.numeric(dd$emis.perc)
dd$relDiff.frac[dd$relDiff.frac == 'reference'] <- 'Raw'
dd$relDiff.frac[dd$relDiff.frac == 'treated'] <- 'Treated'
# # Reference and treatment rows from original data file in separate columns
dl <- dat[dat$relTreat == 'yes', ]
dref <- dl[dl$relTreat.frac == 'reference', ]
dtreat <- dl[dl$relTreat.frac == 'treated', ]
dw <- merge(dref, dtreat, by = c('source', 'relTreat.set'), suffixes = c('.ref', '.treat'), all = TRUE)
dw$emis.perc.treat <- as.numeric(dw$emis.perc.treat)
dw$emis.perc.ref <- as.numeric(dw$emis.perc.ref)
dw[dw == 'cattle'] <- 'Cattle'
dw[dw == 'pig'] <- 'Pig'
dw[dw == 'acidification'] <- 'Acidification'
dw[dw == 'separation'] <- 'Separation'
dw[dw == 'separation and acidification'] <- 'Separation and acidification'
dw[dw == 'broadcast'] <- 'Broadcast'
dw[dw == 'closed slot injection'] <- 'Closed slot injection'
dw[dw == 'trailing hose'] <- 'Trailing hose'
dw[dw == 'trailing shoe'] <- 'Trailing shoe'
ggplot(dw[dw$relTreat.treat.treat == 'Separation' | dw$relTreat.treat.treat == 'Acidification', ],
aes(emis.perc.ref, emis.perc.treat, shape = slurry.major.ref, color = app.meth.ref)) +
geom_point() +
facet_grid(~ relTreat.treat.treat) +
geom_abline(intercept = 0, slope = 1, linetype = 2) +
scale_color_brewer(palette = "Set1") +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Digestate EF (% of TAN)', y = 'Treated digestate EF (% of TAN)', shape = '', colour = '', lty = '') +
xlim(0, 50) + ylim(0, 50)
ggplot(dw[dw$relTreat.treat.treat == 'Separation' | dw$relTreat.treat.treat == 'Acidification', ],
aes(emis.perc.ref, emis.perc.treat, shape = slurry.major.ref, color = app.meth.ref)) +
geom_point() +
facet_grid(~ relTreat.treat.treat) +
geom_abline(intercept = 0, slope = 1, linetype = 2) +
scale_color_brewer(palette = "Set1") +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Digestate EF (% of TAN)', y = 'Treated digestate EF (% of TAN)', shape = '', colour = '', lty = '') +
xlim(0, 50) + ylim(0, 50)
View(dw)
ggplot(dw[dw$relTreat.treat.treat == 'Separation' | dw$relTreat.treat.treat == 'Acidification', ],
aes(emis.perc.ref, emis.perc.treat, shape = slurry.major.ref, color = app.meth.ref)) +
geom_point() +
facet_grid(~ relTreat.treat.treat) +
geom_abline(intercept = 0, slope = 1, linetype = 2) +
scale_color_brewer(palette = "Set1") +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Digestate EF (% of TAN)', y = 'Treated digestate EF (% of TAN)', shape = '', colour = '', lty = '')# +
ggplot(dw[dw$relTreat.treat.treat == 'Separation' | dw$relTreat.treat.treat == 'Acidification', ],
aes(emis.perc.ref, emis.perc.treat, shape = slurry.major.ref, color = app.meth.ref)) +
geom_point() +
facet_grid(~ relTreat.treat.treat) +
geom_abline(intercept = 0, slope = 1, linetype = 2) +
scale_color_brewer(palette = "Set1") +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Digestate EF (% of TAN)', y = 'Treated digestate EF (% of TAN)', shape = '', colour = '', lty = '') +
xlim(0, 55) + ylim(0, 55)
ggsave2x('../plots/treat_effect', height = 4, width = 7)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('packages.R')
source('load.R')
# total amount of literature
length(unique(dat$source))
unique(dat$source)
# total observations:
nrow(dat)
# observations complying with sub-category (i) (absolute emissions)
sum(with(dat, absEmis == 'yes'))
# number of studies with observations complying with sub-category (i) (absolute emissions)
length(unique(dat$source[dat$absEmis == 'yes']))
unique(dat$source[dat$absEmis == 'yes'])
# observations complying with sub-category (ii) (relative effect of digestion)
sum(with(dat, relDiff == 'yes'))
# observations complying with sub-category (iii) (effect of digestate treatment)
sum(with(dat, relTreat == 'yes'))
# observations complying with sub-category (vi) (effect of digestate application tech)
sum(with(dat, relApp == 'yes'))
#####
# observations with cattle slurry
sum(with(dat, slurry.major == 'cattle'))
# observations with pig slurry
sum(with(dat, slurry.major == 'pig'))
# observations with pig slurry
sum(with(dat, slurry.major == 'cattle and pig'))
#####
# percentage of observations with band application (trailing hose + trailing shoe) out of total
sum(with(dat, app.meth == 'trailing hose' | app.meth == 'trailing shoe'), na.rm = TRUE) / nrow(dat[! is.na(dat$app.meth), ]) * 100
#####
# percentage of observations lacking soil dry bulk density info
nrow(dat[is.na(dat$dry.bulk), ]) / nrow(dat) * 100
# percentage of observations lacking soil water content info
nrow(dat[is.na(dat$grav.water), ]) / nrow(dat) * 100
#####
(nrow(dat[is.na(dat$co.dig) , ]) + sum(with(dat, co.dig == 'no'), na.rm = TRUE)) / nrow(dat) * 100
sum(with(dat, co.dig == 'no'), na.rm = TRUE) / sum(with(dat, co.dig == 'yes'), na.rm = TRUE) * 100
# Calculating mean, sd, and n of DM, pH, TAN and totN
dl <- dat[! is.na(dat$co.dig), ]
View(dl)
# removing reference slurry (non digestates)
dl <- dat[! is.na(dat$co.dig), ]
# observations that are digestate
sum(is.na(dat$co.dig))
# observations that are digestate
sum(with(dat, co.dig == 'no' | co.dig == 'yes', na.rm = TRUE) / nrow(dat)
# observations that are digestate
sum(with(dat, co.dig == 'no' | co.dig == 'yes', na.rm = TRUE)) / nrow(dat)
# observations that are digestate
sum(with(dat, co.dig == 'no' | co.dig == 'yes', na.rm = TRUE)) / nrow(dat)
# observations that are digestate
sum(with(dat, co.dig == 'no' | co.dig == 'yes'), na.rm = TRUE) / nrow(dat)
# observations that are digestate
sum(with(dat, co.dig == 'no' | co.dig == 'yes'), na.rm = TRUE) / nrow(dat) * 100
# removing reference slurry (non digestates)
dl <- dat[! is.na(dat$co.dig), ]
# And then summarize
summ <- aggregate2(dl, x = c('DM', 'pH', 'TAN', 'totN'), by = c('slurry.major', 'variable'),
FUN = list(mean = mean, sd = sd, n = length))
source('../functions/aggregate2.R')
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('functions.R')
source('packages.R')
source('load.R')
source('count.R')
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('functions.R')
source('packages.R')
source('load.R')
source('count.R')
# removing reference slurry (non digestates)
dl <- dat[! is.na(dat$co.dig), ]
# And then summarize
summ <- aggregate2(dl, x = c('DM', 'pH', 'TAN', 'totN'), by = c('slurry.major', 'variable'),
FUN = list(mean = mean, sd = sd, n = length))
# And then summarize
summ <- aggregate2(dl, x = c('DM', 'pH', 'TAN', 'totN'), by = c('slurry.major'),
FUN = list(mean = mean, sd = sd, n = length))
summ <- rounddf(summ, 3, fun = signif)
source('../functions/rounddf.R')
summ <- rounddf(summ, 3, fun = signif)
View(summ)
# And then summarize
summ <- aggregate2(dl, x = c('DM', 'pH', 'TAN', 'totN'), by = c('slurry.major'),
FUN = list(mean = mean, sd = sd, n = length), na.rm = TRUE)
summ <- rounddf(summ, 3, fun = signif)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('functions.R')
source('packages.R')
source('load.R')
source('count.R')
# removing reference slurry (non digestates)
dl <- dat[! is.na(dat$co.dig), ]
View(dl)
# And then summarize
summ <- aggregate2(dl, x = c('DM', 'pH', 'TAN', 'totN'), by = c('slurry.major'), na.rm = TRUE,
FUN = list(mean = mean, sd = sd, n = length))
summ <- rounddf(summ, 3, fun = signif)
# And then summarize
summ <- aggregate2(dl, na.rm = TRUE, x = c('DM', 'pH', 'TAN', 'totN'), by = c('slurry.major'),
FUN = list(mean = mean, sd = sd, n = length))
summ <- rounddf(summ, 3, fun = signif)
# removing reference slurry (non digestates)
dl <- dat[! is.na(dat$co.dig), na.rm = TRUE]
# And then summarize
summ <- aggregate2(dl, x = c('DM', 'pH', 'TAN', 'totN'), by = c('slurry.major'),
FUN = list(mean = mean, sd = sd, n = length, na.action = na.omit))
summ <- rounddf(summ, 3, fun = signif)
# And then summarize
summ <- aggregate2(dl, x = c('DM', 'pH', 'TAN', 'totN'), by = c('slurry.major'),
FUN = list(mean = mean, sd = sd, n = length), na.action = na.omit)
summ <- rounddf(summ, 3, fun = signif)
# And then summarize
summ <- aggregate2(dl, x = c('DM', 'pH', 'TAN', 'totN'), by = c('slurry.major'),
FUN = list(mean = mean, sd = sd, n = length), na.rm = TRUE)
summ <- rounddf(summ, 3, fun = signif)
rm(list = ls())
dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('functions.R')
source('packages.R')
source('load.R')
source('count.R')
# removing reference slurry (non digestates)
dl <- dat[! is.na(dat$co.dig), ]
# And then summarize
summ <- aggregate2(dl, x = c('DM', 'pH', 'TAN', 'totN'), by = c('slurry.major'),
FUN = list(mean = mean, sd = sd, n = length), na.rm = TRUE)
View(summ)
